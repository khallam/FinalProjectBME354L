//Sample using LiquidCrystal library
#include <LiquidCrystal.h>
/*******************************************************
 * This program will test the LCD panel and the buttons
 * Mark Bramwell, July 2010
 ********************************************************/
// select the pins used on the LCD panel
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);
// define some values used by the panel and buttons
int lcd_key = 0;
int adc_key_in = 0;
#define btnRIGHT 0
#define btnUP 1
#define btnDOWN 2
#define btnLEFT 3
#define btnSELECT 4
#define btnNONE 5
#define V1 80
#define V2 230
#define V3 350
#define V4 500
#define V5 800

int start=0;
int start2=0;
int moveon=0;
int var1=0;
// read the buttons
int read_LCD_buttons()
{
  adc_key_in = analogRead(A0); // read the value from the sensor
  // my buttons when read are centered at these valies: 0, 144, 329, 504, 741
  // we add approx 50 to those values and check to see if we are closeif (adc_key_in >& VNONE) return btnNONE; // We make this the 1st option for speed reasons since it will be the most likely result
  if (adc_key_in < V1 ) return btnRIGHT;
  if (adc_key_in < V2 && adc_key_in > V1) return btnUP;
  if (adc_key_in < V3 && adc_key_in > V2) return btnDOWN;
  if (adc_key_in < V4 && adc_key_in > V3) return btnLEFT;
  if (adc_key_in < V5 && adc_key_in > V4) return btnSELECT;
  if (adc_key_in > V4 ) return btnNONE;


  return btnNONE; // when all others fail, return this...
}
void setup()
{
  lcd.begin(16, 2); // start the library
}
void loop()
{
  lcd_key = read_LCD_buttons(); // read the buttons

    switch(lcd_key)
  {
  case btnSELECT:
    {
      moveon=moveon+1;
    }
  }

  if(moveon ==1 )
  {
    lcd.setCursor(0,0);
    lcd.print("Set minute settings:");

    lcd.setCursor(1,1);
    lcd.print(start,DEC);

    delay(200);

    switch(lcd_key)
    {

    case btnUP:
      {
        start=start+1;
        if(start>9)
        {
          start=0;
        }
        lcd.setCursor(1,1);
        lcd.print(start,DEC);
        var1 = start;
        break;
      }
    case btnDOWN:
      {
        start=start-1;
        if(start<0)
        {
          start=0;
        }
        lcd.setCursor(1,1);
        lcd.print(start,DEC);
        var1 = start;
        break;
      }
      /*case btnSELECT:
       moveon = moveon + 1;
       var1 = start;
       */
    }
  }

  if(moveon ==2 )
  {
    lcd.setCursor(1,1);
    lcd.print(var1,DEC);
    lcd.setCursor(2,1);
    lcd.print(start2,DEC);

    delay(200);

    switch(lcd_key)
    {

    case btnUP:
      {
        start2=start2+1;
        if(start2>9)
        {
          start2=0;
        }
        lcd.setCursor(1,1);
        lcd.print(var1,DEC);
        lcd.setCursor(2,1);
        lcd.print(start2,DEC);
        break;
      }
    case btnDOWN:
      {
        start2=start2-1;
        if(start2<0)
        {
          start2=0;
        }
        lcd.setCursor(1,1);
        lcd.print(var1,DEC);
        lcd.setCursor(2,1);
        lcd.print(start2,DEC);
        break;
      }
      /*case btnSELECT:
       moveon = moveon + 1;
       var1 = start;
       */
    }
  }
}














/*
switch (lcd_key) // depending on which button was pushed, we perform an action
 {
 case btnRIGHT:
 {
 lcd.setCursor(0,0);
 lcd.print("Right");
 lcd.setCursor(1,1);
 lcd.print(adc_key_in);
 
 break;
 }
 case btnLEFT:
 {
 lcd.setCursor(0,0);
 lcd.print("Left");
 lcd.setCursor(1,1);
 lcd.print(adc_key_in);
 break;
 }
 case btnUP:
 {
 lcd.setCursor(0,0);
 lcd.print("Up");
 lcd.setCursor(1,1);
 lcd.print(adc_key_in);
 break;
 }
 case btnDOWN:
 {
 lcd.setCursor(0,0);
 lcd.print("Down");
 lcd.setCursor(1,1);
 lcd.print(adc_key_in);
 break;
 }
 case btnSELECT:
 {
 lcd.setCursor(0,0);
 lcd.print("Select");
 lcd.setCursor(1,1);
 lcd.print(adc_key_in);
 break;
 }
 case btnNONE:
 {
 lcd.setCursor(0,0);
 lcd.print("None");
 lcd.setCursor(1,1);
 lcd.print(adc_key_in);
 break;
 }
 }
 delay(500);
 }
 */
